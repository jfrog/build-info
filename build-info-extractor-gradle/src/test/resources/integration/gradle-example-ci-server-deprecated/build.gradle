def javaProjects() {
  subprojects.findAll { new File(it.projectDir, 'src').directory }
}

allprojects {
  group = 'org.jfrog.test.gradle.publish'
  version = currentVersion
  status = 'Integration'
  repositories {
    maven {
      url "${System.env.BITESTS_PLATFORM_URL}/artifactory/${System.env.BITESTS_ARTIFACTORY_VIRTUAL_REPO}"
      credentials {
        username "${System.env.BITESTS_PLATFORM_USERNAME}"
        password "${System.env.BITESTS_PLATFORM_ADMIN_TOKEN}"
      }
    }
  }
}

artifactoryPublish.skip = true

project('services') {
  artifactoryPublish.skip = true
}

subprojects {
  apply plugin: 'java'
  apply plugin: 'maven'

  manifest {
    attributes 'provider': 'gradle'
  }
  configurations {
    published
  }
  dependencies {
    testImplementation 'junit:junit:4.7'
  }
  artifacts {
    published file("$rootDir/gradle.properties")
  }
}

configurations {
  published
}

artifactory {
  clientConfig.setIncludeEnvVars(true)
  clientConfig.info.addEnvironmentProperty('test.adding.dynVar', new java.util.Date().toString())

  contextUrl = "JENKINS_OVERRIDES_THIS_FIELD"
  publish {
    repository {
      repoKey = "JENKINS_OVERRIDES_THIS_FIELD" // The Artifactory repository key to publish to
      username = "JENKINS_OVERRIDES_THIS_FIELD" // The publisher user name
      password = "JENKINS_OVERRIDES_THIS_FIELD" // The publisher password
      // This is an optional section for configuring Ivy publication (when publishIvy = true).
      ivy {
        ivyLayout = '[organization]/[module]/ivy-[revision].xml'
        artifactLayout = '[organization]/[module]/[revision]/[module]-[revision](-[classifier]).[ext]'
        mavenCompatible = true
        //Convert any dots in an [organization] layout value to path separators, similar to Maven's groupId-to-path conversion. True if not specified
      }
    }
    defaults {
      // Reference to Gradle configurations defined in the build script.
      // This is how we tell the Artifactory Plugin which artifacts should be
      // published to Artifactory.
      publishConfigs('archives', 'published')
      // Properties to be attached to the published artifacts.
      properties = ['qa.level': 'basic', 'dev.team': 'core']
      // You can also attach properties to published artifacts according to
      // the following notation:
      // <configuration name> <artifact spec>
      // The <configuration name> should be the name of the relevant Gradle Configuration or 'all'
      // (for all configurations).
      // Artifact spec has the following structure:
      // group:artifact:version:classifier@ext
      // Any element in the artifact spec notation can contain the * and ? wildcards.
      // For example:
      // org.acme:*:1.0.?_*:*@tgz
      properties {
        all '*:*:1.*:*@*', key1: 'val1', key2: 'val2'
        all 'org.jfrog.*:*:1.*:*@jar*', key3: 'val3', key4: 'val4'
      }
      publishPom = true // Publish generated POM files to Artifactory (true by default)
      publishIvy = true // Publish generated Ivy descriptor files to Artifactory (true by default)
    }
  }
}
